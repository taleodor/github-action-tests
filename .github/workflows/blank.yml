# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - id: install-cdxgen
        name: Install cdxgen cli
        shell: bash
        run: npm install -g @cyclonedx/cdxgen@11.7.0
      - name: Run a multi-line script
        shell: bash
        run: |
          docker pull registry.relizahub.com/291f1cbe-e608-4ffd-8e1e-9a7f78e3df18-public/rebom-frontend@sha256:54d3c6367e24ffbf677a3578487898906ea42ea361ee52105716d40646ef13ff
          docker save -o docker.tar registry.relizahub.com/291f1cbe-e608-4ffd-8e1e-9a7f78e3df18-public/rebom-frontend@sha256:54d3c6367e24ffbf677a3578487898906ea42ea361ee52105716d40646ef13ff
          export FETCH_LICENSE=true
          export CDXGEN_DEBUG_MODE=debug
          pip install blint
          export TMPDIR=$PWD/tmp
          mkdir -p "$TMPDIR"
          cdxgen docker.tar -t docker --lifecycle post-build --exclude-regex ".*\/usr\/lib64.*" --project-version "${{ inputs.rearm_full_version }}" -o docker.cdx.bom.raw.json

